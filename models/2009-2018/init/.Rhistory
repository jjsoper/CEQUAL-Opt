source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
head(baseflow)
head(baseflows)
BFI <- aggregate(Flow~Filter, baseflows, sum)
BFI
baseflow.sum <- aggregate(Flow~Filter, baseflows, sum)
runoff.sum <- aggregate(get(trib)~Filter, baseflows, sum)
runoff.sum
sum(flows$`Stillwater River`)
baseflow.sum <- aggregate(Flow~Filter, baseflows, sum)
runoff.sum <- aggregate(get(trib)~Filter, baseflows, sum)
baseflow.sum
runoff.sum
merge(baseflow.sum, runoff.sum, by = "Filter")
BFI$BFI <- BFI[,2] / BFI[,3]
BFI <- merge(baseflow.sum, runoff.sum, by = "Filter")
BFI$BFI <- BFI[,2] / BFI[,3]
BFI
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
?hysep
?bf_eckhardt
bf_eckhardt
BaseflowSeparation
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
tribs.list <- c("Quinapoxet River", "Gates Brook", "Stillwater River")
filter <- 0.925
bfi.max <- 0.75
plts <- lapply(tribs.list, function(trib) {
baseflows <- trib.baseflow(trib, filter, bfi.max)
BFI <- compute.BFI(baseflows)
return(baseflow.plot(baseflows,BFI))
})
tribs.list <- c("Quinapoxet River", "Gates Brook", "Stillwater River")
tribs.list
# plts <- lapply(tribs.list, function(trib)
for (trib in tribs.list) {
baseflows <- trib.baseflow(trib, filter, bfi.max)
BFI <- compute.BFI(baseflows)
return(baseflow.plot(baseflows,BFI))
}
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
trib
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
plts[[1]]
plts[[2]]
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
source('~/Master\'s Thesis/Research/GIS/Baseflow Comparisons.R', echo=TRUE)
plts[[1]]
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/WSECal.R', echo=TRUE)
writeClipboard(as.character(flows$V2))
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/WSECal.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/WSECal.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/WSECal.R', echo=TRUE)
writeClipboard(as.character(flows$V2))
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/WSECal.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/WSECal.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/WSECal.R', echo=TRUE)
head(flows)
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/2017_2018_devel.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/2017_2018_devel.R', echo=TRUE)
qdt
writeClipboard(as.character(qdt))
writeClipboard(as.character(qdt))
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/WSECal.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/WSECal.R', echo=TRUE)
writeClipboard(as.character(smooth_flows))
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
model.run
save.folder
save.grobs()
save.grobs(save.folder)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/WSECal.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/WSE Calibration/WSECal.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/WSECal.R', echo=TRUE)
writeClipboard(as.character(smooth_flows))
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/2017_2018_devel.R', echo=TRUE)
writeClipboard(as.character(cdt))
writeClipboard(as.character(cdt$TDS))
writeClipboard(as.character(tdt$TEMP))
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/Analysis/2016_2018 Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/Analysis/2016_2018 Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/Analysis/2016_2018 Model Analysis.R', echo=TRUE)
unique(bn.meas$Julian_day)
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/Analysis/2016_2018 Model Analysis.R', echo=TRUE)
head(profile)
save.folder
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/Analysis/2016_2018 Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/Analysis/2016_2018 Model Analysis.R', echo=TRUE)
ci.temp
head(ci.meas)
# Observed
ci.meas <- read.csv("C:/Users/Josh Soper/Documents/Master's Thesis/Modeling/Josh/2016-2018 Model/Model Run/Measured Data/2016-2018CI_Measured_Corrected.csv")
head(ci.meas)
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/Analysis/2016_2018 Model Analysis.R', echo=TRUE)
ci.temp
ci.cond
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/Analysis/2016_2018 Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
ci.temp <-
ggplot(subset(cosgrove, Constituent == constituent),
aes(x = Date, y = Value, linetype = output, shape = output, color = output)) +
geom_point(size = 3) +
geom_path(size = 1) +
scale_shape_manual(values = shapes) +
scale_linetype_manual(values = linetype) +
scale_color_manual(values = cols) +
scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
scale_x_date(limits = c("2015-01-01", '2018-12-31')) +
labs(title = paste("Model Results at Cosgrove Intake:", constituent),
subtitle = paste(paste("RMSE:", error$temp.rmse), paste("AME:", error$temp.mae), paste("ME:", error$temp.me), sep = '  '),
y = lab, x = "Date", color = '', shape = '', linetype = '') +
theme_bw() +
theme(legend.position = 'bottom',
plot.title = element_text(hjust=0.5, face = 'bold'),
plot.subtitle = element_text(hjust = 0.5, face  = 'bold'),
panel.grid.major = element_line(color = 'gray80'),
panel.grid.minor = element_blank(),
panel.background = element_rect(color = 'black', fill = NA),
panel.spacing.x = unit(6, 'mm'))
ggplot(subset(cosgrove, Constituent == constituent),
aes(x = Date, y = Value, linetype = output, shape = output, color = output)) +
geom_point(size = 3) +
geom_path(size = 1) +
scale_shape_manual(values = shapes) +
scale_linetype_manual(values = linetype) +
scale_color_manual(values = cols) +
scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
scale_x_date(limits = c(as.Date("2015-01-01"), as.Date('2018-12-31'))) +
labs(title = paste("Model Results at Cosgrove Intake:", constituent),
subtitle = paste(paste("RMSE:", error$temp.rmse), paste("AME:", error$temp.mae), paste("ME:", error$temp.me), sep = '  '),
y = lab, x = "Date", color = '', shape = '', linetype = '') +
theme_bw() +
theme(legend.position = 'bottom',
plot.title = element_text(hjust=0.5, face = 'bold'),
plot.subtitle = element_text(hjust = 0.5, face  = 'bold'),
panel.grid.major = element_line(color = 'gray80'),
panel.grid.minor = element_blank(),
panel.background = element_rect(color = 'black', fill = NA),
panel.spacing.x = unit(6, 'mm'))
ci.cond <-
ggplot(subset(cosgrove, Constituent == constituent),
aes(x = Date, y = Value, linetype = output, shape = output, color = output)) +
geom_point(size = 3) +
geom_path(size = 1) +
scale_shape_manual(values = shapes) +
scale_linetype_manual(values = linetype) +
scale_color_manual(values = cols) +
labs(title = paste("Model Results at Cosgrove Intake:", constituent),
subtitle = paste(paste("RMSE:", error$cond.rmse), paste("AME:", error$cond.mae), paste("ME:", error$cond.me), sep = '  '),
y = lab, x = "Date", color = '', shape = '', linetype = '') +
scale_y_continuous(limits = c(50,200), breaks = seq(50,200,25), expand = c(0,0)) +
scale_x_date(limits = c(as.Date("2015-01-01"), as.Date('2018-12-31'))) +
scale_x_date(limits = c(as.Date("20-01-01"), as.Date("2018-12-31"))) +
theme_bw() +
theme(legend.position = 'bottom',
plot.title = element_text(hjust=0.5, face = 'bold'),
plot.subtitle = element_text(hjust = 0.5, face  = 'bold'),
panel.grid.major = element_line(color = 'gray80'),
panel.grid.minor = element_blank(),
panel.background = element_rect(color = 'black', fill = NA),
panel.spacing.x = unit(6, 'mm'))
constituent <- 'Specific Conductivity'
lab = "Specific Conductivity (µS/cm)"
ci.cond <-
ggplot(subset(cosgrove, Constituent == constituent),
aes(x = Date, y = Value, linetype = output, shape = output, color = output)) +
geom_point(size = 3) +
geom_path(size = 1) +
scale_shape_manual(values = shapes) +
scale_linetype_manual(values = linetype) +
scale_color_manual(values = cols) +
labs(title = paste("Model Results at Cosgrove Intake:", constituent),
subtitle = paste(paste("RMSE:", error$cond.rmse), paste("AME:", error$cond.mae), paste("ME:", error$cond.me), sep = '  '),
y = lab, x = "Date", color = '', shape = '', linetype = '') +
scale_y_continuous(limits = c(50,200), breaks = seq(50,200,25), expand = c(0,0)) +
scale_x_date(limits = c(as.Date("2015-01-01"), as.Date('2018-12-31'))) +
theme_bw() +
theme(legend.position = 'bottom',
plot.title = element_text(hjust=0.5, face = 'bold'),
plot.subtitle = element_text(hjust = 0.5, face  = 'bold'),
panel.grid.major = element_line(color = 'gray80'),
panel.grid.minor = element_blank(),
panel.background = element_rect(color = 'black', fill = NA),
panel.spacing.x = unit(6, 'mm'))
ci.cond
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/Analysis/2016_2018 Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Conductivity Probe Comparison.R', echo=TRUE)
head(comp)
comp[comp$Time == 'Pre',]
comp[comp$Time == 'Pre',]$`CI Specific Conductivity` - comp[comp$Time == 'Pre',]$`Specific Conductivity`
mean(comp[comp$Time == 'Pre',]$`CI Specific Conductivity` - comp[comp$Time == 'Pre',]$`Specific Conductivity`)
median(comp[comp$Time == 'Pre',]$`CI Specific Conductivity` - comp[comp$Time == 'Pre',]$`Specific Conductivity`)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
head(ci.meas)
###
i.meas[ci.meas$Date <= "2016-01-01"]
###
ci.meas[ci.meas$Date <= "2016-01-01"]
###
ci.meas[ci.meas$Date <= "2016-01-01",]
###
ci.meas[ci.meas$Date <= "2016-01-01",]$Specific.Conductivity <- ci.meas[ci.meas$Date <= "2016-01-01",]$Specific.Conductivity + 9
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/Analysis/2016_2018 Model Analysis.R', echo=TRUE)
save.grobs(save.folder)
source('~/Master\'s Thesis/Modeling/Josh/2016-2018 Model/Analysis/2016_2018 Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Sensitivity Results Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Sensitivity Results Analysis.R', echo=TRUE)
parameters
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Sensitivity Results Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Sensitivity Results Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Sensitivity Results Analysis.R', echo=TRUE)
bn.temp <- lapply(parameters, return_profile_plots, "Temp")
names(bn.temp) <- parameters
bn.cond <- lapply(parameters, return_profile_plots, "Cond")
names(bn.cond) <- parameters
# Profile Stratification Obs vs Sim ---------------------------------------
return.strat <- function(df, layer.strat) {
df$strat <- NA
df$strat[df$Layer<layer.strat[1]] <- "Epilimnion"
df$strat[df$Layer>=layer.strat[1] & df$Layer<layer.strat[2]] <- "Metalimnion"
df$strat[df$Layer>=layer.strat[2]] <- "Hypolimnion"
return(df)
}
error.by.strat <- function(meas.df, model.df) {
return(list('Epilimnion' =  round(profile.error(meas.df[meas.df$strat == "Epilimnion",], model.df[model.df$strat == "Epilimnion",]), digits = 2),
'Metalimnion' = round(profile.error(meas.df[meas.df$strat == "Metalimnion",], model.df[model.df$strat == "Metalimnion",]), digits = 2),
'Hypolimnion' = round(profile.error(meas.df[meas.df$strat == "Hypolimnion",], model.df[model.df$strat == "Hypolimnion",]), digits = 2)))
}
strat.errors <- list()
layer.strat <- c(15,32)
bn.model <- lapply(bn.model, return.strat, layer.strat)
bn.meas <- return.strat(bn.meas, layer.strat)
obs.sim.plots <- function(parameter, plot.constituent) {
sensitivity = unique(bn.model[[parameter]]$Sensitivity)
strat.errors <- function(sensitivity, parameter) {
strat.errors <- error.by.strat(meas.df = bn.meas, model.df = subset(bn.model[[parameter]], Sensitivity == sensitivity))
df <- data.frame(Constituent = c(rep("Temperature",3), rep("Specific Conductivity", 3)),
Sensitivity.y = sensitivity,
strat = rep(c("Epilimnion", "Metalimnion", "Hypolimnion"), 2),
RMSE = c(strat.errors$Epilimnion$temp.rmse, strat.errors$Metalimnion$temp.rmse, strat.errors$Hypolimnion$temp.rmse,
strat.errors$Epilimnion$cond.rmse, strat.errors$Metalimnion$cond.rmse, strat.errors$Hypolimnion$cond.rmse),
ME = c(strat.errors$Epilimnion$temp.me, strat.errors$Metalimnion$temp.me, strat.errors$Hypolimnion$temp.me,
strat.errors$Epilimnion$cond.me, strat.errors$Metalimnion$cond.me, strat.errors$Hypolimnion$cond.me),
stringsAsFactors = F)
return(df)
}
bn.strat <- merge(bn.meas, bn.model[[parameter]], by = c("Date", "Constituent", "Layer", "strat"), all = F)
bn.strat <- rename(bn.strat, Observed = Value.x, Simulated = Value.y)
bn.strat$strat <- factor(bn.strat$strat, levels = c("Epilimnion", "Metalimnion", "Hypolimnion"))
bn.strat$Sensitivity.y <- factor(bn.strat$Sensitivity.y, levels = as.character(sort(as.numeric(unique(bn.strat$Sensitivity.y)))))
strat.errors.df <- bind_rows(lapply(sensitivity, strat.errors, parameter))
strat.errors.df$strat <- factor(strat.errors.df$strat, levels = c("Epilimnion", "Metalimnion", "Hypolimnion"))
strat.errors.df$Sensitivity.y <- factor(strat.errors.df$Sensitivity.y, levels = as.character(sort(as.numeric(unique(strat.errors.df$Sensitivity.y)))))
simobs.col = 'orange'
limits <- c(0, 30)
breaks <- seq(0,30 ,5)
constituent <- "Temperature"
lab = "(°C)"
if (plot.constituent == "temp") {
bn.temp.strat <-
ggplot(subset(bn.strat, Constituent == constituent), aes(x = Observed, y = Simulated)) +
geom_point(shape = 1, size = 2, color = alpha(colour = simobs.col,alpha =  0.5)) +
geom_abline(slope = 1, intercept = 0, color = 'black', size = 1.25) +
facet_wrap(vars(strat, Sensitivity.y), ncol = 4) +
geom_text(data = subset(strat.errors.df, Constituent == constituent),
aes(x = 1, y = 25, label = paste("RMSE:", RMSE)), hjust = 0) +
geom_text(data = subset(strat.errors.df, Constituent == constituent),
aes(x = 1, y = 22, label = paste("ME:", ME)), hjust = 0) +
labs(x = paste("Observed", lab), y = paste("Simulated", lab), title = paste(parameter, "Sensitivity: Basin North", constituent)) +
theme_bw() +
scale_y_continuous(limits = limits, breaks = breaks, expand = c(0,0)) +
scale_x_continuous(limits = limits, breaks = breaks, expand = c(0,0)) +
theme(plot.title = element_text(hjust=0, face = 'bold'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(color = 'black', fill = NA),
strip.background = element_rect(fill="white"),
strip.text = element_text(face = 'bold'),
plot.margin=unit(c(0.8,1,1.5,0.8),"cm"),
panel.spacing.x = unit(6, 'mm'))
return(bn.temp.strat)
}
limits <- c(50,200)
breaks <- seq(50,200, 25)
constituent <- "Specific Conductivity"
lab = "(µS/cm)"
if (plot.constituent == "cond") {
bn.cond.strat <-
ggplot(subset(bn.strat, Constituent == constituent), aes(x = Observed, y = Simulated)) +
geom_point(shape = 1, size = 2, color = alpha(simobs.col, 0.5)) +
geom_abline(slope = 1, intercept = 0, color = 'black', size = 1.25) +
facet_wrap(vars(strat, Sensitivity.y), ncol = 4) +
geom_text(data = subset(strat.errors.df, Constituent == constituent),
aes(x = 60, y = 175, label = paste("RMSE:", RMSE)), hjust = 0) +
geom_text(data = subset(strat.errors.df, Constituent == constituent),
aes(x = 60, y = 160, label = paste("ME:", ME)), hjust = 0) +
labs(x = paste("Observed", lab), y = paste("Simulated", lab), title = paste(parameter, "Sensitivity: Basin North", constituent)) +
theme_bw() +
scale_y_continuous(limits = limits, breaks = breaks, expand = c(0,0)) +
scale_x_continuous(limits = limits, breaks = breaks, expand = c(0,0)) +
theme(plot.title = element_text(hjust=0, face = 'bold'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(color = 'black', fill = NA),
strip.background = element_rect(fill="white"),
strip.text = element_text(face = 'bold'),
plot.margin=unit(c(0.8,1,1.5,0.8),"cm"),
panel.spacing.x = unit(6, 'mm'))
return(bn.cond.strat)
}
}
# obs.sim.sensitivity.temp <- lapply(parameters, obs.sim.plots, "temp")
# obs.sim.sensitivity.cond <- lapply(parameters, obs.sim.plots, "cond")
# COSGROVE INTAKE ---------------------------------------------------------
return_cosgrove_sensitivity <- function(model.folders) {
ci.model <- list()
for (parameter in parameters) {
ci.model[[parameter]] <- lapply(model.folders[[parameter]], function(folder) {
df <- CosgroveResults(folder = folder, segment = "44")
df <- Reduce(function(...) merge(...,by = 'JDAY', all=T), df)
return(df)
})
names(ci.model[[parameter]]) <- vals[[parameter]]
ci.model[[parameter]] <- bind_rows(ci.model[[parameter]], .id = 'Sensitivity')
}
return(ci.model)
}
cosgrove <- list()
# Observed
ci.meas <- read.csv("C:/Users/Josh Soper/Documents/Master's Thesis/Modeling/Josh/2009-2018 Model/Model Run/Measured Data/2009-2018CI_Measured_Corrected.csv")
ci.meas$Date <- as.Date(ci.meas$Date)
ci.meas$JDAY <- as.numeric(ci.meas$Date) - as.numeric(as.Date("2008-12-31"))
ci.meas$Sensitivity <- "Observed"
# Model
ci.model <- return_cosgrove_sensitivity(model.folders = model.folders)
ci.model <- lapply(ci.model, transform, Date = as.Date(JDAY, origin = '2008-12-31'))
# Error
# error <- round(timeseries.error(ci.meas = ci.meas, ci.model = ci.model, withdrawal = "44"), 2)
# Plotting
return_cosgrove_plots <- function(parameter, return) {
cosgrove$Temperature <- rbind(select(ci.model[[parameter]], Date, JDAY, Temperature, Sensitivity),
select(ci.meas, Date, JDAY, Temperature, Sensitivity))
cosgrove$`Specific Conductivity` <- rbind(select(ci.model[[parameter]], Date, JDAY, Specific.Conductivity, Sensitivity),
select(ci.meas, Date, JDAY, Specific.Conductivity, Sensitivity))
cosgrove <- lapply(cosgrove, function(df) {
names(df) <- c("Date", "JDAY", "Value", 'Sensitivity')
return(df)
})
cosgrove <- bind_rows(cosgrove, .id = "Constituent")
cosgrove$Sensitivity <- as.character(cosgrove$Sensitivity)
cosgrove$Date <- as.Date(cosgrove$Date)
cosgrove$Sensitivity <- factor(cosgrove$Sensitivity,
levels = c(as.character(sort(as.numeric(unique(cosgrove$Sensitivity)[unique(cosgrove$Sensitivity) != 'Observed']))), 'Observed'))
sens.num <- length(unique(cosgrove$Sensitivity)) - 1
shapes <- c(rep(NA, sens.num), 1)
linetype <- c(rep(1, sens.num), 0)
if (return == 'temp') {
# Temperature
constituent <- 'Temperature'
lab = "Temperature (°C)"
ci.temp <-
ggplot(subset(cosgrove, Constituent == constituent),
aes(x = Date, y = Value, linetype = Sensitivity, shape = Sensitivity, color = Sensitivity)) +
geom_point(size = 3) +
geom_path(size = 1) +
scale_shape_manual(values = shapes) +
scale_linetype_manual(values = linetype) +
scale_color_manual(values = colors) +
scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20)) +
labs(title = paste(parameter, "Sensitivity: Cosgrove Intake", constituent),
y = lab, x = "Date", color = '', shape = '', linetype = '') +
theme_bw() +
theme(legend.position = 'bottom',
plot.title = element_text(hjust=0.5, face = 'bold'),
plot.subtitle = element_text(hjust = 0.5, face  = 'bold'),
panel.grid.major = element_line(color = 'gray80'),
panel.grid.minor = element_blank(),
panel.background = element_rect(color = 'black', fill = NA),
panel.spacing.x = unit(6, 'mm'))
return(ci.temp)
}
if (return == 'cond') {
# Conductivity
constituent <- 'Specific Conductivity'
lab = "Specific Conductivity (µS/cm)"
ci.cond <-
ggplot(subset(cosgrove, Constituent == constituent),
aes(x = Date, y = Value, linetype = Sensitivity, shape = Sensitivity, color = Sensitivity)) +
geom_point(size = 3) +
geom_path(size = 1) +
scale_shape_manual(values = shapes) +
scale_linetype_manual(values = linetype) +
scale_color_manual(values = colors) +
scale_y_continuous(breaks = seq(50,200,25), limits = c(50,200)) +
labs(title = paste(parameter, "Sensitivity: Cosgrove Intake", constituent),
y = lab, x = "Date", color = '', shape = '', linetype = '') +
theme_bw() +
theme(legend.position = 'bottom',
plot.title = element_text(hjust=0.5, face = 'bold'),
plot.subtitle = element_text(hjust = 0.5, face  = 'bold'),
panel.grid.major = element_line(color = 'gray80'),
panel.grid.minor = element_blank(),
panel.background = element_rect(color = 'black', fill = NA),
panel.spacing.x = unit(6, 'mm'))
return(ci.cond)
}
}
ci.sensitivity.temp <- lapply(parameters, return_cosgrove_plots, "temp")
names(ci.sensitivity.temp) <- parameters
ci.sensitivity.cond <- lapply(parameters, return_cosgrove_plots, "cond")
names(ci.sensitivity.cond) <- parameters
# all.plots <- list()
# Save plots
save.folder <- master.folder
SaveToPDF(save.folder, "Basin North Profile SensitivityTSED.pdf", append(bn.temp, bn.cond))
SaveToPDF(save.folder, "Basin North Obs Sim SensitivityTSED.pdf", append(obs.sim.sensitivity.temp, obs.sim.sensitivity.cond))
SaveToPDF(save.folder, "CI SensitivityTSED.pdf", append(ci.sensitivity.temp, ci.sensitivity.cond))
source("C:/Users/Josh Soper/Documents/Master's Thesis/Modeling/Josh/R/Analysis/SavePlots.R")
# all.plots <- list()
# Save plots
save.folder <- master.folder
SaveToPDF(save.folder, "Basin North Profile SensitivityTSED.pdf", append(bn.temp, bn.cond))
SaveToPDF(save.folder, "Basin North Obs Sim SensitivityTSED.pdf", append(obs.sim.sensitivity.temp, obs.sim.sensitivity.cond))
SaveToPDF(save.folder, "CI SensitivityTSED.pdf", append(ci.sensitivity.temp, ci.sensitivity.cond))
bn.temp
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Sensitivity Results Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Sensitivity Results Analysis.R', echo=TRUE)
bn.temp
bn.temp$TSED
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Sensitivity Results Analysis.R', echo=TRUE)
bn.temp
head(bn.model)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Sensitivity Results Analysis.R', echo=TRUE)
bn.temp
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Sensitivity Results Analysis.R', echo=TRUE)
head(bn.model)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Sensitivity Results Analysis.R', echo=TRUE)
head(bn.model)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Sensitivity Results Analysis.R')
head(bn.model[[1]])
View(ProfileResults)
View(ProfileResults)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Sensitivity Results Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Sensitivity Results Analysis.R', echo=TRUE)
head(bn.model[[1]])
bn.model$TSED
head(bn.model$TSED)
head(bn.model$TSED[[1]])
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Sensitivity Results Analysis.R', echo=TRUE)
tail(bn.model[[1]])
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Sensitivity Results Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Sensitivity Results Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Sensitivity Results Analysis.R', echo=TRUE)
head(bn.meas)
head(bn.model$TSED)
typeof(bn.meas$Date)
typeof(bn.meas$Date[1])
typeof(bn.model$TSED$Date)
typeof(bn.model$TSED$Date[1])
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Sensitivity Results Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
unique(bn.meas$Julian_day)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
unique(bn.meas$Julian_day)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
5/7
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
source('~/Master\'s Thesis/Modeling/Josh/2009-2018 Model/Model Run/Analysis (R)/Ten Year Model Analysis.R', echo=TRUE)
